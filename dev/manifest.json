[
    {
        "guid": "5216ccbf-d24a-4eb3-8a7e-7da4230b7052",
        "name": "Shoko",
        "description": "A Jellyfin plugin to integrate [Jellyfin](https://jellyfin.org/docs/) with [Shoko Server](https://shokoanime.com/downloads/shoko-server/).\n## Read this before installing\n**This plugin requires that you have already set up and are using Shoko Server**, and that the files you intend to include in Jellyfin are **indexed** (and optionally managed) by Shoko Server. **Otherwise, the plugin won't be able to provide metadata for your files**, since there is no metadata to find for them.\n",
        "overview": "Manage your anime from Jellyfin using metadata from Shoko",
        "owner": "ShokoAnime",
        "category": "Metadata",
        "imageUrl": "https://raw.githubusercontent.com/ShokoAnime/Shokofin/metadata/banner.png",
        "versions": [
            {
                "version": "4.1.1.44",
                "changelog": "`misc`: **Show library id in export mode**.\n\n`misc`: **Correct config definition in JSDoc**.",
                "targetAbi": "10.9.7.0",
                "sourceUrl": "https://github.com/ShokoAnime/Shokofin/releases/download/v4.1.1-dev.44/shoko_4.1.1.44.zip",
                "checksum": "cf9378b56e1824c91c543bbdba5e64a0",
                "timestamp": "2024-09-29T22:40:32Z"
            },
            {
                "version": "4.1.1.43",
                "changelog": "`fix`: **Hide/show container instead of input**.",
                "targetAbi": "10.9.7.0",
                "sourceUrl": "https://github.com/ShokoAnime/Shokofin/releases/download/v4.1.1-dev.43/shoko_4.1.1.43.zip",
                "checksum": "c0e737d05aa0310b4fc11f93a8a83d39",
                "timestamp": "2024-09-29T19:22:31Z"
            },
            {
                "version": "4.1.1.42",
                "changelog": "`refactor`: **Rewrite settings page (again)**:\n\n- Rewrote the settings controller to support a tab-based view. And in the process tweaked where a few settings belonged. This is purely a client-side/cosmetic change, but helps navigating the settings.\n\n- Added a dummy utility to better understand how to implement future utilities.\n\n- Added a common JS file with shared logic to document the life-cycle events for plugin views used by the existing settings and dummy utility, in addition to any future utilities. This is also complete with JSDoc type definitions.\n\n- Added an option to show the Shoko settings and utilities directly on the side-navigation menu on the dashboard. Saving you 1 step to tweak the settings ~~or use any of the future utilities that may or may not be made at some point in time\u2026 no promises~~.\n\n- Moved the html/js files to a new directory better suited for storing them.\n\n`fix`: **Better error handling during VFS generation**:\n\n- Add configurable limits for when the link generation should be aborted.\n\n- Skip link generation for remaining files if we exceed the configured limit.\n\n- Throw an `AggregateException` if any series exceeded the maximum number of exceptions, or if the total number of exceptions exceeded the maximum allowed. Additionally, if no links were generated and there were any exceptions, but we haven't reached the maximum allowed exceptions yet, then also throw an `AggregateException`.\n\n`feat`: **Add optional resolve links before vfs option**:\n\n- Added a new advanced option to resolve any symbolic links to their real target before generating the symbolic links to place to the VFS, effectively skipping the additionally needed lookup steps later when Jellyfin accesses the symbolic link placed in the VFS.\n\n`chore`: **Singular to plural in method names**.\n\n`misc`: **Log library id in import folder iteration step during VFS generation**.\n\n`fix`: **Fix paths used in event dispatcher**.\n\n`fix`: **Workaround for broken `await`/`async` support in Jellyfin Web**:\n\nTo-be removed if the issue is fixed in the core, but for now we'll have this ugly workaround.",
                "targetAbi": "10.9.7.0",
                "sourceUrl": "https://github.com/ShokoAnime/Shokofin/releases/download/v4.1.1-dev.42/shoko_4.1.1.42.zip",
                "checksum": "2342d38111c96f175e4cf7dbb8ea9e58",
                "timestamp": "2024-09-29T10:04:46Z"
            },
            {
                "version": "4.1.1.41",
                "changelog": "`misc`: **Fix wording for VFS setting**.",
                "targetAbi": "10.9.7.0",
                "sourceUrl": "https://github.com/ShokoAnime/Shokofin/releases/download/v4.1.1-dev.41/shoko_4.1.1.41.zip",
                "checksum": "80661dd5e9f330836977a00047a27cf5",
                "timestamp": "2024-09-26T06:03:16Z"
            },
            {
                "version": "4.1.1.40",
                "changelog": "`fix`: **Fix guard for iterating import folder files**:\n\n- Fixed the guard for iterating import folder files to once again check if the current path is a media folder, but this time also check if it's the physical VFS root attached to the library. With this check in place then it will prevent other locations from triggering a full refresh of the VFS, e.g. old VFS roots and/or other media folders attached to the library that are not part of the VFS.\n\n`refactor`: **Overhaul the merge versions manager**:\n\n- Refactored the merge versions manager to re-use logic and implement generics in the merge/split process.\n\n`fix`: **Auto remove 'physical' VFS roots when needed**.\n\n`fix`: **Skip generation of vfs if we need to edit the libraries**.\n\n`revert`: **\"fix: fix up media folder and user selectors\"**:\n\nThis commit partially reverts commit 0d765de84e1af913da5e90297e6fa91a2383fc2e.\n\nThe updated sync media folder logic was flawed, and fixing it will produce spaghetti so instead I'll revert the changes and trust the users to not make mistakes. \ud83d\udcff\n\n`misc`: **Rename method to better clarify what it's for**.\n\n`fix`: **Stop skipping cache for import folder**:\n\n- Stop skipping the cache when getting the files for an import folder. Now that the usage tracker exists it's not needed, because the cache will be cleared when nothing is using it.\n\n`feat`: **Add custom VFS location**:\n\n- Add an ** EXPERIMENTAL** option to specify a custom VFS root location. So now you can select between placing it in a) the jellyfin data directory (_the default_), b) the jellyfin cache directory, or c) somewhere you want it to live. Just note that by changing the setting you will need to either refresh and see your library turn to dust and rebuild itself, or take matters into your own hands and recreate it yourself.\n\n`misc`: **Add missing expert mode class to merge seasons option**.\n\n`fix`: **Properly generate VFS for movie libraries**:\n\n- Properly generate the VFS for movie libraries, even when filtering is disabled.\n\n`refactor`: **Generate all configurations first**:\n\n- Generate all configurations first, then just extract the needed one, instead of first generating one configuration, then generating the rest, then returning the first.\n\n`fix`: **Attach import folder relative path**:\n\n- Attach the import folder's relative path to the file's relative path when comparing the locations in the shoko library monitor to determine if the file is known by shoko.\n\n`fix`: **Fix up signalr media folder selector + more**:\n\n- Fixed up the signalr media folder settings selector.\n\n- Fixed loading indicator.\n\n`misc`: **Enable file events by default**:\n\n- Enable file events by default. Because of the way we do the event handling then the setting also applies to real-time monitoring events for the library/libraries.\n\n`feat`: **Merge versions upon refresh**.",
                "targetAbi": "10.9.7.0",
                "sourceUrl": "https://github.com/ShokoAnime/Shokofin/releases/download/v4.1.1-dev.40/shoko_4.1.1.40.zip",
                "checksum": "aab8111eb6d562972f0c55ed69abc50b",
                "timestamp": "2024-09-25T02:32:14Z"
            }
        ]
    }
]